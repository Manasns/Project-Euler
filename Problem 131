//Author: Manas Sarma
//Project Euler-Problem 131

public class PCP {

	public static void main(String[] args) {
		int count = 0;
		for(int p = 1; p <= 2000000; p++) {
			for(int n = 1; n <= 2000000; n++) {
				if(isPrime(p) && (isPerfectCube(Math.pow(n, 3) + Math.pow(n, 2)*p))) {
					count++;
					System.out.println(Math.pow(n, 3) + p*Math.pow(n, 2));
					System.out.println(p);
				}
			}
		}
		System.out.println(count);
	}
	
	public static boolean isPrime(long j) {
		if(j <= 1)
			return false;
		for(long k = 2; k <= j/2; k++) {
			if(j % k == 0)
				return false;
		}
		return true;
	}
	
	private static boolean isPerfectCube(double n) {
		 if (n < 0)
		  return false;
		 long tst = (long) (Math.cbrt(n) + 0.5);
		 return tst * tst * tst == n;
		}
}
